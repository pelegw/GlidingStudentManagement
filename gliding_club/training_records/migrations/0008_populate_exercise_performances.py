# Generated by Django 5.1.7 on 2025-03-30 10:58

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('training_records', '0007_exerciseperformance'),
    ]

    operations = [
    ]

def populate_exercise_performances(apps, schema_editor):
    """
    Migrate existing exercise relationships to the new ExercisePerformance model.
    For exercises that were previously associated with a record, mark them as 'performed_well'.
    For all other exercises, create 'not_performed' entries to ensure all exercises have a status.
    """
    TrainingRecord = apps.get_model('training_records', 'TrainingRecord')
    Exercise = apps.get_model('training_records', 'Exercise')
    ExercisePerformance = apps.get_model('training_records', 'ExercisePerformance')
    
    # Get all exercises
    all_exercises = list(Exercise.objects.all())
    
    # For each training record, create performance entries
    for record in TrainingRecord.objects.all():
        # Get existing exercises for this record
        existing_exercises = list(record.exercises.all())
        existing_exercise_ids = [ex.id for ex in existing_exercises]
        
        # Create performance entries for all exercises
        for exercise in all_exercises:
            # Determine if this exercise was previously attached to the record
            was_performed = exercise.id in existing_exercise_ids
            
            # Create the performance record
            ExercisePerformance.objects.create(
                training_record=record,
                exercise=exercise,
                performance='performed_well' if was_performed else 'not_performed'
            )

def reverse_migration(apps, schema_editor):
    """Reverse the migration by deleting all ExercisePerformance records"""
    ExercisePerformance = apps.get_model('training_records', 'ExercisePerformance')
    ExercisePerformance.objects.all().delete()

class Migration(migrations.Migration):
    dependencies = [
        ('training_records', '0007_exerciseperformance'),  # Adjust this to match your migration number
    ]

    operations = [
        migrations.RunPython(populate_exercise_performances, reverse_migration),
    ]